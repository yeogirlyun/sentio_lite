#!/bin/bash
# =============================================================================
# Hourly Optuna Optimization Script
# =============================================================================
# Runs hourly (10:00, 11:00, 12:00, 13:00, 14:00, 15:00) to optimize parameters
# Usage: ./hourly_optuna_relaunch.sh <comprehensive_warmup_file>
#
# Workflow:
#   1. Run Optuna on comprehensive data (historical 20 blocks + today's bars up to this hour)
#   2. Compare optimized MRB vs baseline MRB
#   3. Select best parameters
#   4. Return to live_trade_command for parameter update
#
# Note: This script does NOT kill/relaunch - the live trading process updates
#       parameters dynamically and continues running. Positions are reconciled.
#
# Author: Generated by Claude Code
# Date: 2025-10-10
# =============================================================================

set -e

PROJECT_ROOT="/Volumes/ExternalSSD/Dev/C++/online_trader"
BUILD_DIR="$PROJECT_ROOT/build"
DATA_DIR="$PROJECT_ROOT/data"
WARMUP_DATA_FILE="${1:-$DATA_DIR/tmp/comprehensive_warmup_$(date '+%Y-%m-%d').csv}"

# Baseline parameters (from v1.0 config)
BASELINE_BUY=0.55
BASELINE_SELL=0.45
BASELINE_LAMBDA=0.995

CURRENT_HOUR=$(TZ='America/New_York' date '+%H')
echo "============================================"
echo "Hourly Optuna Optimization ($CURRENT_HOUR:00)"
echo "============================================"
echo "Time: $(TZ='America/New_York' date '+%Y-%m-%d %H:%M:%S ET')"
echo ""

# Step 1: Verify comprehensive warmup file exists
if [[ ! -f "$WARMUP_DATA_FILE" ]]; then
    echo "❌ Warmup data file not found: $WARMUP_DATA_FILE"
    echo "Cannot run optimization - continuing with baseline parameters"
    exit 1
fi

BAR_COUNT=$(tail -n +2 "$WARMUP_DATA_FILE" | wc -l | tr -d ' ')
echo "✓ Comprehensive warmup data loaded: $BAR_COUNT bars"
echo ""

# Step 2: Run hourly intraday Optuna optimization
echo "=== Step 1: Hourly Intraday Optimization (100-bar window) ==="
echo "Optimizing parameters on last 100 bars..."
echo ""

OPTUNA_OUTPUT="$DATA_DIR/tmp/hourly_optuna_$(date '+%Y%m%d_%H%M%S').json"

python3 tools/hourly_intraday_optuna.py \
    --data "$WARMUP_DATA_FILE" \
    --build-dir "$BUILD_DIR" \
    --output "$OPTUNA_OUTPUT" \
    --n-trials 20 \
    2>&1

echo ""

# Step 3: Extract optimized parameters from hourly optimization result
if [[ ! -f "$OPTUNA_OUTPUT" ]]; then
    echo "❌ Optuna output not found - using baseline parameters"
    SELECTED_SOURCE="baseline"
    SELECTED_BUY=$BASELINE_BUY
    SELECTED_SELL=$BASELINE_SELL
    SELECTED_LAMBDA=$BASELINE_LAMBDA
    SELECTED_MRD=0.0
else
    # Extract results from hourly_intraday_optuna.py output
    SELECTED_SOURCE=$(jq -r '.source' "$OPTUNA_OUTPUT" 2>/dev/null || echo "baseline")
    SELECTED_BUY=$(jq -r '.buy_threshold' "$OPTUNA_OUTPUT" 2>/dev/null || echo "$BASELINE_BUY")
    SELECTED_SELL=$(jq -r '.sell_threshold' "$OPTUNA_OUTPUT" 2>/dev/null || echo "$BASELINE_SELL")
    SELECTED_LAMBDA=$(jq -r '.ewrls_lambda' "$OPTUNA_OUTPUT" 2>/dev/null || echo "$BASELINE_LAMBDA")
    SELECTED_MRD=$(jq -r '.expected_mrd' "$OPTUNA_OUTPUT" 2>/dev/null || echo "0.0")

    echo "=== Optimization Result ==="
    echo "  Source: $SELECTED_SOURCE"
    echo "  Selected parameters:"
    echo "    buy_threshold: $SELECTED_BUY"
    echo "    sell_threshold: $SELECTED_SELL"
    echo "    ewrls_lambda: $SELECTED_LAMBDA"
    echo "  Expected MRD: $SELECTED_MRD%"
    echo ""
fi

# Step 4: Save selected parameters for live trading to pick up
cat > "$DATA_DIR/tmp/midday_selected_params.json" <<EOF
{
  "source": "$SELECTED_SOURCE",
  "buy_threshold": $SELECTED_BUY,
  "sell_threshold": $SELECTED_SELL,
  "ewrls_lambda": $SELECTED_LAMBDA,
  "expected_mrb": $SELECTED_MRD,
  "timestamp": "$(date '+%Y-%m-%d %H:%M:%S ET')"
}
EOF

echo "✓ Parameters saved to: $DATA_DIR/tmp/midday_selected_params.json"
echo ""

echo "============================================"
echo "✅ Hourly Optimization Complete ($CURRENT_HOUR:00)"
echo "============================================"
echo "  Parameters: $SELECTED_SOURCE"
echo "  Expected MRD: $SELECTED_MRD%"
echo ""
echo "Next: Live trading will update parameters dynamically and continue"
echo "      Positions will be reconciled with new thresholds"
echo ""

exit 0
